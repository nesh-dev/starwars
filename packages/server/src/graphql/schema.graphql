
type Query {
    people(input:Page!): ResultObject!
    searchPeople(input: SearchParams!): [Person!]!
}

input Page { 
    page: String!
}

input SearchParams { 
    name: String!
}

type Person{ 
    name: String!
    height: String!
    mass: String!
    gender: String!
    homeworld: String!
}



type ResultObject {
    count: Int!
    next: String
    previous: String
    results: [Person!]!
 }

type Query { 
    login(email: String!, password: String!): AuthenticationResponse!
}

type AuthenticationResponse { 
    token: String!
}
type Mutation { 
    register(RegisterArg: RegisterArg!): AuthenticationResponse!
}

input RegisterArg { 
    email: String! 
    password: String!
}
